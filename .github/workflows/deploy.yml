name: MyWebApp

on:
  push:
    branches:
    - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Check out this repo
      uses: actions/checkout@v4

    - name: Restore dependencies (install Nuget packages)
      run: dotnet restore

    - name: Build and publish the app
      run: |
        dotnet build --no-restore
        dotnet publish -c Release -o ./publish  

    - name: List contents of publish folder
      run: ls -R ./publish

    - name: Upload app artifacts to Github
      uses: actions/upload-artifact@v4
      with:
        name: app-artifacts
        path: ./publish

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    - name: Download the artifacts from Github (from the build job)
      uses: actions/download-artifact@v4
      with:
        name: app-artifacts

    - name: Set up SSH key for Bastion Host
      run: |
        echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # Disable strict host key checking to prevent issues with first-time connections
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        # Ensure the SSH key is used for tunneling
        export SSH_AUTH_SOCK=$(ls /tmp/ssh-*/agent.* | tail -n 1)

    - name: Start SSH Tunnel from Bastion Host
      run: |
        # Start SSH tunnel and keep it open in the background
        ssh -f -N -L 2222:10.0.0.4:22 -i ~/.ssh/id_rsa azureuser@98.71.41.249
        # Give the tunnel time to establish
        sleep 20
        # Verify if the tunnel is up and listening on port 2222
        netstat -an | grep 2222

    - name: Test SSH tunnel connection
      run: |
        # Test if we can connect via the tunnel using the correct private key
        ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 -p 2222 azureuser@localhost 'echo Tunnel is working'

    - name: Stop the application service
      run: |
        sudo systemctl stop MyWebApp.service

    - name: Deploy the application
      run: |
        # Copy the files over to the server using SCP via the tunnel
        scp -i ~/.ssh/id_rsa -P 2222 -r /home/azureuser/actions-runner/_work/MyWebApp/MyWebApp/* azureuser@localhost:/opt/MyWebApp/

    - name: Start the application service
      run: |
        sudo systemctl start MyWebApp.service
