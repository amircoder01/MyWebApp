name: Build & Deploy MyWebApp via Bastion

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and publish MyWebApp
        run: |
          dotnet build --no-restore
          dotnet publish -c Release -o ./publish

      - name: Upload app artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mywebapp-artifacts
          path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: mywebapp-artifacts
          path: ./mywebapp-artifacts

      - name: Debug – Show contents of artifacts
        run: |
          echo "Artifacts:"
          ls -la ./mywebapp-artifacts

      - name: Save Bastion SSH key
        run: |
          echo "${{ secrets.BASTION_KEY }}" > bastion_key.pem
          chmod 600 bastion_key.pem

      - name: Start SSH tunnel from Bastion → AppServer
        run: |
          ssh -i bastion_key.pem -o StrictHostKeyChecking=no -f -N -L 2222:10.0.0.4:22 azureuser@98.71.41.249
          sleep 5

      - name: Copy MyWebApp files to AppServer via tunnel
        run: |
          eval "$(ssh-agent -s)"
          ssh-add bastion_key.pem
          scp -o StrictHostKeyChecking=no -P 2222 -r ./mywebapp-artifacts/* azureuser@localhost:/opt/MyWebApp/

      - name: Restart MyWebApp service on AppServer
        run: |
          ssh -i bastion_key.pem -o StrictHostKeyChecking=no -p 2222 azureuser@localhost "sudo systemctl restart MyWebApp"
