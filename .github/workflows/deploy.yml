name: MyWebApp .NET Deployment

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Setup .NET
        run: |
          export DOTNET_ROOT=/home/azureuser/.dotnet
          export PATH=/home/azureuser/.dotnet:$PATH
          dotnet --info

      - name: Check out this repo
        uses: actions/checkout@v4

      - name: Restore dependencies
        run: |
          export DOTNET_ROOT=/home/azureuser/.dotnet
          export PATH=/home/azureuser/.dotnet:$PATH
          dotnet restore

      - name: Build with memory limits
        run: |
          export DOTNET_ROOT=/home/azureuser/.dotnet
          export PATH=/home/azureuser/.dotnet:$PATH
          export DOTNET_CLI_TELEMETRY_OPTOUT=1
          dotnet build --no-restore --configuration Release /p:UseSharedCompilation=false

      - name: Build and publish the app
        run: |
          export DOTNET_ROOT=/home/azureuser/.dotnet
          export PATH=/home/azureuser/.dotnet:$PATH
          dotnet build --no-restore MyWebApp.csproj
          dotnet publish -c Release -o ./publish MyWebApp.csproj

      - name: Deploy to App Server via Bastion
        run: |
          # Lägg till Bastion till kända värdar och stäng av strikt host key checking
          mkdir -p ~/.ssh
          ssh-keyscan -H 98.71.41.249 >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          # Testa SSH-anslutning till Bastion
          ssh -o StrictHostKeyChecking=no azureuser@98.71.41.249 'echo "Bastion connection successful"'
          
          # Kopiera filer till AppServer via Bastion
          scp -o StrictHostKeyChecking=no -o "ProxyCommand ssh -A azureuser@98.71.41.249 nc %h %p" -r ./publish/* azureuser@10.0.0.4:/opt/MyWebApp/
          
          # Starta om tjänsten på AppServer
          ssh -o StrictHostKeyChecking=no -A -J azureuser@98.71.41.249 azureuser@10.0.0.4 'sudo systemctl restart MyWebApp.service'

      - name: Cleanup
        if: always()
        run: |
          sudo systemctl restart walinuxagent || true
          sudo apt-get clean
          sudo rm -rf /tmp/*
          pkill -f dotnet || true
