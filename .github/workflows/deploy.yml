name: MyWebApp

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Check out this repo
        uses: actions/checkout@v4

      - name: Restore dependencies
        run: |
          dotnet restore

      - name: Build and publish the app
        run: |
          dotnet build --no-restore
          dotnet publish -c Release -o ./publish  

      - name: List contents of publish folder
        run: ls -R ./publish

      - name: Upload app artifacts to Github
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: ./publish

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
    - name: Download the artifacts from Github (from the build job)
      uses: actions/download-artifact@v4
      with:
        name: app-artifacts

    - name: Start SSH Tunnel from Bastion Host
      run: |
        # Start SSH tunnel from Bastion Host in background
        ssh -f -N -L 2222:10.0.0.4:22 azureuser@98.71.41.249
        # Wait for a few seconds to ensure the tunnel is up
        sleep 20
        # Verify the tunnel is up
        netstat -an | grep 2222

    - name: Test SSH tunnel
      run: |
        # Test if we can connect via the tunnel using the private key stored in GitHub Secret
        ssh -i /tmp/bastion_key.pem -o ConnectTimeout=10 -p 2222 azureuser@localhost 'echo Tunnel is working'

    - name: Stop the application service
      run: |
        sudo systemctl stop MyWebApp.service

    - name: Deploy the application
      run: |
        # Copy the files over to the server using SCP via the tunnel
        scp -i /tmp/bastion_key.pem -P 2222 -r ./publish/* azureuser@localhost:/opt/MyWebApp/

    - name: Start the application service
      run: |
        sudo systemctl start MyWebApp.service
